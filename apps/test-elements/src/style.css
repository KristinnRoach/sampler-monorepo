body {
  font-family:
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    'Open Sans',
    'Helvetica Neue',
    sans-serif;
  line-height: 1.6;
  color: white;

  max-width: 100vw;
  max-height: 100vh;
  height: 100vh;

  margin: 0 auto;
  background-color: #323334;
}

.node-container {
  position: relative;
  padding: 20px;
  box-sizing: border-box;

  /* No scrolling */
  height: 100vh;
  width: 100vw;

  /* overflow: hidden; */
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: flex-start;
  gap: 20px;
}

.draggable {
  display: flex;
  position: relative;
  z-index: 100;
}

/* .dynamic {
  border-radius: 1rem;
} */

/* Base styles for the custom elements */
.lib-node {
  display: flex;
  flex-direction: column;
  /* flex: 1; */

  /* Dimensions */
  height: fit-content;
  width: fit-content;
  /* max-width: 30%; */

  /* position: absolute; */
  z-index: 100;
  cursor: grab;
  user-select: none;
  touch-action: none;

  /* Spacing */
  margin: 20px 0;
  padding: 15px;

  background-color: #333;
  border: 1px solid #555;

  transform: translate(0, 0); /* Initial transform state */
  will-change: transform; /* Performance optimization for animations */
}

.lib-node .loop-controller .fine-tune-control #fine-tune-knob {
  border: solid 1px #555;
}

/* dragging */
.lib-node:active {
  cursor: grabbing;
}

sampler-element {
  display: flex;
}

.sampler {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  width: 100%;
  padding: 15px;
  box-sizing: border-box;
  justify-items: center;
  align-items: center;
}

.sampler two-thumb-slider {
  width: 90%;
}

.karplus-synth {
  position: relative;
}

.karplus-synth input {
  pointer-events: auto;
  cursor: pointer;
}

/* .sampler .dynamic envelope-element .parameters {
  display: flex;
  flex-direction: column;
} */

/* Styling the custom elements - updated for Light DOM */
button {
  background: #7bc7e3;
  color: rgb(0, 0, 0);
  border: none;
  border-radius: 4px;
  padding: 8px 12px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.2s;
}

button:hover {
  background: #3e8e41;
}

recorder-element #record-toggle[active] button {
  background-color: rgb(182, 6, 42);
  color: whitesmoke;
  animation: pulse 1.5s infinite;
}

#record-toggle:not([active]) button:hover {
  background: #3e8e41;
}

#record-toggle[active] button:hover {
  background: #7a0d24;
}

.lib-node .parameters {
  margin: 15px 0;
  margin-bottom: 5px;
  width: 100%;

  /* background-color: #4caf50; */

  input[type='range'] {
    width: 25vw;
  }

  input:hover {
    cursor: pointer;
  }
}

/* Filter element styles */
filter-element .filter-control {
  width: 100%;
  padding: 8px;
}

filter-element .filter-header {
  margin-bottom: 12px;
}

filter-element .filter-title {
  font-weight: bold;
  font-size: 1.1em;
}

filter-element .filter-body {
  display: flex;
  flex-direction: column;
}

filter-element .filter-values {
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
}

filter-element .hpf-value,
filter-element .lpf-value {
  padding: 4px 8px;
  background: #333;
  border-radius: 4px;
  color: white;
  font-size: 0.9em;
}

filter-element .freq-value {
  font-weight: bold;
}

filter-element two-thumb-slider {
  width: 100%;
  margin: 8px 0;
}
