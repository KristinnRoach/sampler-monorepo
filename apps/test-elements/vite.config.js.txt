// import { VitePWA } from 'vite-plugin-pwa';
// import { defineConfig, searchForWorkspaceRoot } from 'vite';
// import { resolve } from 'path';

// export default defineConfig({
//   plugins: [
//     VitePWA({
//       registerType: 'autoUpdate',
//       includeAssets: ['favicon.ico', 'robots.txt', 'apple-touch-icon.png'],
//       workbox: {
//         globPatterns: [
//           '**/*.{js,css,html,ico,png,svg,wav,mp3}',
//           // Only include patterns for files that actually exist
//           // 'assets/processors-*.js', // Use Vite's naming pattern for the processors file
//         ],
//       },
//       manifest: {
//         name: 'Hljóðsmali',
//         short_name: 'Smali',
//         description: 'Playground for demoing a musical web audio library (WIP)',
//         theme_color: '#000000',
//         icons: [
//           {
//             src: 'icons/pwa-192x192.png',
//             sizes: '192x192',
//             type: 'image/png',
//           },
//           {
//             src: 'icons/pwa-512x512.png',
//             sizes: '512x512',
//             type: 'image/png',
//           },
//           {
//             src: 'icons/apple-touch-icon-180x180.png',
//             sizes: '180x180', // Fixed size to match actual dimensions
//             type: 'image/png',
//           },
//         ],
//       },
//     }),
//   ],

//   // Configure server
//   server: {
//     port: 3000,
//     open: true,
//     // Allow loading files from parent directories
//     fs: {
//       allow: [
//         // Allow the default workspace root
//         searchForWorkspaceRoot(process.cwd()),
//         // Explicitly allow the packages directory
//         resolve(__dirname, '../../packages'),
//       ],
//     },
//   },

//   // Enhanced alias configuration to handle both local and monorepo paths
//   resolve: {
//     alias: {
//       // Monorepo package aliases
//       '@repo/audiolib': resolve(__dirname, '../../packages/audiolib/src'),
//       '@repo/audio-web-components': resolve(
//         __dirname,
//         '../../packages/audio-web-components/src'
//       ),
//       // Add the @ alias for the audiolib package
//       '@': resolve(__dirname, '../../packages/audiolib/src'),
//     },
//   },

//   // Optimize build - change outDir to avoid conflict with publicDir
//   build: {
//     outDir: 'dist', // Change from 'public' to 'dist'
//     sourcemap: true,
//     rollupOptions: {
//       // Configure the build to copy processors.js to the correct location
//       output: {
//         manualChunks: {
//           // Create a separate chunk for processors
//           'processors/processors': [
//             '../../packages/audiolib/src/processors/index.ts',
//           ],
//         },
//       },
//     },
//   },
// });
