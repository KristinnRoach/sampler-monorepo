{"version":3,"file":"index-seG2YdzB.js","sources":["../../src/utils/dom-utils.ts","../../src/utils/expandCollapse.ts","../../src/db/samplelib/sampleIdb.ts","../../src/components/SaveButton.tsx","../../src/components/Sidebar.tsx","../../src/components/SidebarToggle.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["export const qs = (classOrId: string, container?: Element) =>\n  (container || document).querySelector(classOrId);\n\nexport const qsa = (classOrId: string, container?: Element) =>\n  (container || document).querySelectorAll(classOrId);\n","import { qsa } from './dom-utils';\n\nexport const toggleRow = (rowNumber: number) => {\n  const rowSelectors = [\n    '.env-group, .sample-group, .mix-group',\n    '.filter-group,  .feedback-group',\n    '.loop-group, .trim-group, .misc-group, .lfo-group',\n    '.toggle-group, .keyboard-group',\n  ];\n\n  const selector = rowSelectors[rowNumber - 1];\n  if (!selector) return;\n  const groups = qsa(selector);\n\n  if (groups.length === 0) return;\n  const allCollapsed = Array.from(groups).every((g) =>\n    g.classList.contains('collapsed')\n  );\n\n  groups.forEach((group) => group.classList.toggle('collapsed', !allCollapsed));\n};\n\nexport function addExpandCollapseListeners() {\n  document.addEventListener('click', (e: MouseEvent) => {\n    const target = e.target as EventTarget | null;\n    if (!(target instanceof Element)) return;\n\n    // Toggle a single group's collapse by legend\n    const legend = target.closest('.expandable-legend');\n    if (legend) {\n      legend.closest('.control-group')?.classList.toggle('collapsed');\n    }\n\n    // Toggle an entire row\n    const rowIcon = target.closest('.row-collapse-icon');\n    if (rowIcon) {\n      const rowAttr = rowIcon.getAttribute('data-row');\n      const row = Number.parseInt(rowAttr ?? '', 10);\n      if (Number.isFinite(row) && row > 0) {\n        toggleRow(row);\n      }\n    }\n  });\n}\n","// db/sampleDatabase.ts\nimport Dexie, { Table } from 'dexie';\n\nexport interface SavedSample {\n  id?: number;\n  name: string;\n  audioData: ArrayBuffer;\n  sampleRate?: number;\n  channels?: number;\n  createdAt?: Date;\n}\n\nexport class SampleDatabase extends Dexie {\n  samples!: Table<SavedSample>;\n\n  constructor() {\n    super('SampleDatabase');\n    this.version(1).stores({\n      samples: '++id, name, createdAt',\n    });\n  }\n}\n\nexport const db = new SampleDatabase();\n","// components/SaveButton.tsx\nimport { Component, createSignal } from 'solid-js';\nimport { db, SavedSample } from '../db/samplelib/sampleIdb';\n// import { SaveButton as SaveSVGButton } from '@repo/audio-components';\n\nfunction audioBufferToWav(buffer: AudioBuffer): ArrayBuffer {\n  const length = buffer.length;\n  const numberOfChannels = buffer.numberOfChannels;\n  const sampleRate = buffer.sampleRate;\n  const arrayBuffer = new ArrayBuffer(44 + length * numberOfChannels * 2);\n  const view = new DataView(arrayBuffer);\n\n  // WAV header\n  const writeString = (offset: number, string: string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n\n  writeString(0, 'RIFF');\n  view.setUint32(4, 36 + length * numberOfChannels * 2, true);\n  writeString(8, 'WAVE');\n  writeString(12, 'fmt ');\n  view.setUint32(16, 16, true);\n  view.setUint16(20, 1, true);\n  view.setUint16(22, numberOfChannels, true);\n  view.setUint32(24, sampleRate, true);\n  view.setUint32(28, sampleRate * numberOfChannels * 2, true);\n  view.setUint16(32, numberOfChannels * 2, true);\n  view.setUint16(34, 16, true);\n  writeString(36, 'data');\n  view.setUint32(40, length * numberOfChannels * 2, true);\n\n  // Convert float samples to 16-bit PCM\n  let offset = 44;\n  for (let i = 0; i < length; i++) {\n    for (let channel = 0; channel < numberOfChannels; channel++) {\n      const sample = Math.max(\n        -1,\n        Math.min(1, buffer.getChannelData(channel)[i])\n      );\n      view.setInt16(\n        offset,\n        sample < 0 ? sample * 0x8000 : sample * 0x7fff,\n        true\n      );\n      offset += 2;\n    }\n  }\n\n  return arrayBuffer;\n}\n\ninterface SaveButtonProps {\n  audioBuffer: AudioBuffer | null;\n  disabled?: boolean;\n}\n\nconst SaveButton: Component<SaveButtonProps> = (props) => {\n  const [saving, setSaving] = createSignal(false);\n\n  const handleSave = async () => {\n    if (!props.audioBuffer) return;\n\n    setSaving(true);\n    try {\n      const name = prompt('Enter sample name:') || `Sample_${Date.now()}`;\n\n      const wavData = audioBufferToWav(props.audioBuffer);\n\n      const sample: SavedSample = {\n        name,\n        audioData: wavData,\n        sampleRate: props.audioBuffer.sampleRate,\n        channels: props.audioBuffer.numberOfChannels,\n        createdAt: new Date(),\n      };\n\n      await db.samples.add(sample);\n      console.log('Sample saved successfully!');\n    } catch (error) {\n      console.error('Save failed:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <save-button\n      class='save-button'\n      disabled={props.disabled || saving()}\n      onclick={handleSave}\n      title='Save current sample'\n    ></save-button>\n  );\n};\n\nexport default SaveButton;\n","// components/Sidebar.tsx\nimport { Component, createSignal, createEffect, For } from 'solid-js';\nimport { db, SavedSample } from '../db/samplelib/sampleIdb';\n\ninterface SidebarProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSampleSelect: (sample: SavedSample) => void;\n}\n\nconst Sidebar: Component<SidebarProps> = (props) => {\n  const [samples, setSamples] = createSignal<SavedSample[]>([]);\n  const [loading, setLoading] = createSignal(false);\n\n  const loadSamples = async () => {\n    setLoading(true);\n    try {\n      const allSamples = await db.samples\n        .orderBy('createdAt')\n        .reverse()\n        .toArray();\n      setSamples(allSamples);\n    } catch (error) {\n      console.error('Failed to load samples:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (sample: SavedSample, event: Event) => {\n    event.stopPropagation(); // Prevent triggering sample selection\n\n    if (!confirm(`Delete \"${sample.name}\"?`)) {\n      return;\n    }\n\n    try {\n      await db.samples.delete(sample.id!);\n      console.log('Sample deleted:', sample.name);\n      // Reload samples to update the list\n      loadSamples();\n    } catch (error) {\n      console.error('Failed to delete sample:', error);\n    }\n  };\n\n  createEffect(() => {\n    if (props.isOpen) {\n      loadSamples();\n    }\n  });\n\n  // Reload when sidebar opens\n  const isOpen = () => props.isOpen;\n\n  return (\n    <div class={`sidebar ${isOpen() ? 'sidebar-open' : 'sidebar-closed'}`}>\n      <div class='sidebar-header'>\n        <h3>Saved Samples</h3>\n        <button class='close-button' onclick={props.onClose}>\n          Ã—\n        </button>\n      </div>\n\n      <div class='sidebar-content'>\n        {loading() ? (\n          <div>Loading...</div>\n        ) : (\n          <For each={samples()}>\n            {(sample) => (\n              <div\n                class='sample-item'\n                onclick={() => props.onSampleSelect(sample)}\n              >\n                <div class='sample-info'>\n                  <div class='sample-name'>{sample.name}</div>\n                  <div class='sample-date'>\n                    {sample.createdAt?.toLocaleDateString()}\n                  </div>\n                </div>\n                <button\n                  class='delete-button'\n                  onclick={(e) => handleDelete(sample, e)}\n                  title={`Delete ${sample.name}`}\n                >\n                  <svg\n                    width='16'\n                    height='16'\n                    viewBox='0 0 24 24'\n                    fill='currentColor'\n                  >\n                    <path d='M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z' />\n                  </svg>\n                </button>\n              </div>\n            )}\n          </For>\n        )}\n\n        {samples().length === 0 && !loading() && (\n          <div class='no-samples'>No saved samples</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","// components/SidebarToggle.tsx\nimport { Component } from 'solid-js';\n\ninterface SidebarToggleProps {\n  onclick: () => void;\n  isOpen?: boolean;\n}\n\nconst SidebarToggle: Component<SidebarToggleProps> = (props) => {\n  return (\n    <button\n      class={`sidebar-toggle ${props.isOpen ? 'open' : ''}`}\n      onclick={props.onclick}\n      title='View saved samples'\n    >\n      <svg width='20' height='20' viewBox='0 0 24 24' fill='currentColor'>\n        <path d='M3 6h18v2H3V6m0 5h18v2H3v-2m0 5h18v2H3v-2Z' />\n      </svg>\n    </button>\n  );\n};\n\nexport default SidebarToggle;\n","import { Component, onMount, createSignal } from 'solid-js';\nimport type { SamplerElement, SamplePlayer } from '@repo/audio-components';\nimport { addExpandCollapseListeners } from './utils/expandCollapse';\nimport SaveButton from './components/SaveButton';\nimport { SavedSample } from './db/samplelib/sampleIdb';\nimport Sidebar from './components/Sidebar';\nimport SidebarToggle from './components/SidebarToggle';\n\nconst App: Component = () => {\n  const [layout, setLayout] = createSignal<'desktop' | 'tablet' | 'mobile'>(\n    'desktop'\n  );\n\n  let samplerElementRef: SamplerElement | undefined;\n  let samplePlayerRef: SamplePlayer | null = null;\n\n  const [currentAudioBuffer, setCurrentAudioBuffer] =\n    createSignal<AudioBuffer | null>(null);\n  const [sampleLoaded, setSampleLoaded] = createSignal(false);\n  const [sidebarOpen, setSidebarOpen] = createSignal(false);\n\n  const handleSampleSelect = async (sample: SavedSample) => {\n    try {\n      if (!samplePlayerRef) return;\n\n      const arrayBuffer = sample.audioData;\n\n      await samplePlayerRef.loadSample(arrayBuffer, undefined, {\n        skipPreProcessing: true,\n      });\n\n      setSidebarOpen(false);\n    } catch (error) {\n      console.error('Failed to load sample:', error);\n    }\n  };\n\n  onMount(() => {\n    const handleSampleLoaded = () => {\n      if (samplerElementRef) {\n        samplePlayerRef = samplerElementRef.getSamplePlayer();\n        const audiobuffer = samplePlayerRef?.audiobuffer || null;\n\n        setCurrentAudioBuffer(audiobuffer);\n        setSampleLoaded(true);\n      }\n    };\n\n    // Simple responsive layout detection\n    const updateLayout = () => {\n      const width = window.innerWidth;\n\n      if (width < 800) {\n        setLayout('mobile');\n      } else if (width < 1200) {\n        setLayout('tablet');\n      } else {\n        setLayout('desktop');\n      }\n    };\n\n    document.addEventListener('sample-loaded', handleSampleLoaded);\n    window.addEventListener('resize', updateLayout);\n\n    updateLayout(); // Initial check\n\n    // Add expand/collapse listeners\n    addExpandCollapseListeners();\n\n    return () => {\n      document.removeEventListener('sample-loaded', handleSampleLoaded);\n      window.removeEventListener('resize', updateLayout);\n    };\n  });\n\n  return (\n    <div id='page-wrapper' class='page-wrapper'>\n      <div class='pre-sidebar-buttons'>\n        <SidebarToggle\n          onclick={() => setSidebarOpen(!sidebarOpen())}\n          isOpen={sidebarOpen()}\n        />\n\n        <SaveButton\n          audioBuffer={currentAudioBuffer()}\n          disabled={!sampleLoaded()}\n        />\n      </div>\n\n      <Sidebar\n        isOpen={sidebarOpen()}\n        onClose={() => setSidebarOpen(false)}\n        onSampleSelect={handleSampleSelect}\n      />\n\n      <div class={`control-grid layout-${layout()}`} id='sampler-container'>\n        {/* Sampler Audio Engine */}\n        <sampler-element\n          ref={samplerElementRef}\n          node-id='test-sampler'\n          debug-mode='false'\n        />\n\n        {/* Controls */}\n        <fieldset class='control-group env-group'>\n          <legend class='expandable-legend'>Envelopes</legend>\n          <div class='expandable-content'>\n            <envelope-switcher height='225px' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group sample-group'>\n          <legend class='expandable-legend'>Sample</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <record-button\n                target-node-id='test-sampler'\n                show-status='false'\n              />\n              <input-select target-node-id='test-sampler' />\n            </div>\n            <load-button target-node-id='test-sampler' show-status='false' />\n            {/* <SaveButton\n              audioBuffer={currentAudioBuffer()}\n              disabled={!sampleLoaded()}\n            /> */}\n            <button\n              class='reset-button'\n              title='Reset knobs'\n              disabled={!sampleLoaded()}\n              onclick={() => {\n                const knobElements = document.querySelectorAll('knob-element');\n                knobElements.forEach((knob) => {\n                  (knob as any).resetToDefault();\n                });\n              }}\n            >\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 256 256'\n                fill='none'\n              >\n                <path d='M139.141 232.184c78.736 0 127.946-85.236 88.579-153.424-39.369-68.187-137.789-68.187-177.158 0A102.125 102.125 0 0 0 43.71 93.1m62.258-5.371c-14.966 5.594-35.547 10.026-48.737 19.272-2.137 1.497-26.015 16.195-26.049 13.991C27.503 98.21 13.21 75.873 13.21 52.583' />\n              </svg>\n            </button>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group mix-group'>\n          <legend class='expandable-legend'>Mix</legend>\n          <div class='expandable-content'>\n            <volume-knob target-node-id='test-sampler' />\n            <dry-wet-knob target-node-id='test-sampler' />\n            <reverb-send-knob label='RevSend' target-node-id='test-sampler' />\n            <reverb-size-knob label='RevSize' target-node-id='test-sampler' />\n            <delay-send-knob label='Delay' target-node-id='test-sampler' />\n            <delay-time-knob label='Time' target-node-id='test-sampler' />\n            <delay-feedback-knob label='FB' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group filter-group'>\n          <legend class='expandable-legend'>Filters</legend>\n          <div class='expandable-content'>\n            <highpass-filter-knob target-node-id='test-sampler' />\n            <lowpass-filter-knob target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group misc-group'>\n          <legend class='expandable-legend'>Misc</legend>\n          <div class='expandable-content'>\n            <distortion-knob target-node-id='test-sampler' />\n            <am-modulation label='AM' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group loop-group'>\n          <legend class='expandable-legend'>Loop</legend>\n          <div class='expandable-content'>\n            <loop-start-knob target-node-id='test-sampler' label='Start' />\n            <loop-duration-knob\n              target-node-id='test-sampler'\n              label='Duration'\n            />\n            <div class='flex-col'>\n              <loop-duration-drift-knob\n                target-node-id='test-sampler'\n                label='Drift'\n              />\n              <pan-drift-toggle target-node-id='test-sampler' />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group trim-group'>\n          <legend class='expandable-legend'>Trim</legend>\n          <div class='expandable-content'>\n            <trim-start-knob target-node-id='test-sampler' />\n            <trim-end-knob target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group feedback-group'>\n          <legend class='expandable-legend'>Feedback</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <feedback-knob target-node-id='test-sampler' label='Amount' />\n              <feedback-mode-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <div class='flex-row'>\n              <div class='flex-col'>\n                <feedback-pitch-knob\n                  target-node-id='test-sampler'\n                  label='Pitch'\n                />\n                <feedback-lpf-knob\n                  label='Lowpass'\n                  class='fb-lpf-knob'\n                  target-node-id='test-sampler'\n                />\n              </div>\n              <feedback-decay-knob\n                target-node-id='test-sampler'\n                label='Decay'\n              />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group lfo-group'>\n          <legend class='expandable-legend'>LFO's</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <gain-lfo-rate-knob target-node-id='test-sampler' label='Rate' />\n              <gain-lfo-sync-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <gain-lfo-depth-knob target-node-id='test-sampler' label='Depth' />\n            <div class='flex-col'>\n              <pitch-lfo-rate-knob target-node-id='test-sampler' label='Rate' />\n              <pitch-lfo-sync-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <pitch-lfo-depth-knob target-node-id='test-sampler' label='Depth' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group toggle-group'>\n          <legend class='expandable-legend'>Toggles</legend>\n          <div class='expandable-content'>\n            <midi-toggle target-node-id='test-sampler' />\n            <playback-direction-toggle target-node-id='test-sampler' />\n            <loop-lock-toggle target-node-id='test-sampler' />\n            <hold-lock-toggle target-node-id='test-sampler' />\n            <pitch-toggle target-node-id='test-sampler' />\n            <sampler-status target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group keyboard-group'>\n          <legend class='expandable-legend'>Keyboard</legend>\n          <computer-keyboard target-node-id='test-sampler' />\n          <div class='expandable-content'>\n            <piano-keyboard\n              id='piano-keyboard'\n              class='piano-keyboard'\n              target-node-id='test-sampler'\n              width='700'\n              height='80'\n            />\n            <div class='keyboard-controls'>\n              <div class='flex-row'>\n                <rootnote-select\n                  show-label='false'\n                  target-node-id='test-sampler'\n                />\n                <keymap-select\n                  show-label='false'\n                  target-node-id='test-sampler'\n                />\n              </div>\n\n              <glide-knob target-node-id='test-sampler' />\n            </div>\n          </div>\n        </fieldset>\n\n        {/* Row collapse icons */}\n        <div class='row-collapse-icon' data-row='1' style='grid-area: mix' />\n        <div\n          class='row-collapse-icon'\n          data-row='2'\n          style='grid-area: feedback'\n        />\n        <div class='row-collapse-icon' data-row='3' style='grid-area: lfo' />\n        <div\n          class='row-collapse-icon'\n          data-row='4'\n          style='grid-area: keyboard'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/* @refresh reload */\nimport { render } from 'solid-js/web';\nimport { defineSampler } from '@repo/audio-components';\nimport App from './App';\nimport './style.css';\n\ndefineSampler(); // Define all web components for the sampler\n\nconst root = document.getElementById('root');\n\nif (import.meta.env.DEV && !(root instanceof HTMLElement)) {\n  throw new Error(\n    'Root element not found. Did you forget to add it to your index.html? Or maybe the id attribute got misspelled?'\n  );\n}\n\nrender(() => <App />, root!);\n"],"names":["qsa","classOrId","container","toggleRow","rowNumber","selector","groups","allCollapsed","g","group","addExpandCollapseListeners","e","target","legend","_a","rowIcon","rowAttr","row","SampleDatabase","Dexie","db","audioBufferToWav","buffer","length","numberOfChannels","sampleRate","arrayBuffer","ArrayBuffer","view","DataView","writeString","offset","string","i","setUint8","charCodeAt","setUint32","setUint16","channel","sample","Math","max","min","getChannelData","setInt16","SaveButton","props","saving","setSaving","createSignal","handleSave","audioBuffer","name","prompt","Date","now","wavData","audioData","channels","createdAt","samples","add","console","log","error","_el$","_tmpl$","$$click","_$owner","_$getOwner","_$effect","disabled","_$delegateEvents","Sidebar","setSamples","loading","setLoading","loadSamples","allSamples","orderBy","reverse","toArray","handleDelete","event","stopPropagation","confirm","delete","id","createEffect","isOpen","_el$2","firstChild","_el$3","_el$4","nextSibling","_el$5","_$addEventListener","onClose","_$insert","_c$","_$memo","_tmpl$2","_$createComponent","For","each","children","_el$7","_tmpl$3","_el$8","_el$9","_el$0","_el$1","onSampleSelect","toLocaleDateString","_$setAttribute","_c$2","_tmpl$4","_$className","SidebarToggle","onclick","App","layout","setLayout","samplerElementRef","samplePlayerRef","currentAudioBuffer","setCurrentAudioBuffer","sampleLoaded","setSampleLoaded","sidebarOpen","setSidebarOpen","handleSampleSelect","loadSample","undefined","skipPreProcessing","onMount","handleSampleLoaded","getSamplePlayer","audiobuffer","updateLayout","width","window","innerWidth","document","addEventListener","removeEventListener","_el$6","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","_el$17","_el$18","_el$19","_el$20","_el$21","_el$22","_el$23","_el$24","_el$25","_el$26","_el$27","_el$28","_el$29","_el$30","_el$31","_el$32","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","_el$39","_el$40","_el$41","_el$42","_el$43","_el$44","_el$45","_el$46","_el$47","_el$48","_el$49","_el$50","_el$51","_el$52","_el$53","_el$54","_el$55","_el$56","_el$57","_el$58","_el$59","_el$60","_el$61","_el$62","_el$63","_el$64","_el$65","_el$66","_el$67","_el$68","_el$69","_el$70","_el$71","_el$72","_el$73","_el$74","_el$75","_el$76","_el$77","_el$78","_el$79","_el$80","_el$81","_el$82","_el$83","_el$84","_el$85","_el$86","_el$87","_el$88","_ref$","_$use","querySelectorAll","forEach","knob","resetToDefault","_p$","_v$","_v$2","t","defineSampler","root","getElementById","render"],"mappings":"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"}