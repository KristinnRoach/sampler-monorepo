{"version":3,"file":"index-CZmzA_jY.js","sources":["../../src/utils/dom-utils.ts","../../src/utils/expandCollapse.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["export const qs = (classOrId: string, container?: Element) =>\n  (container || document).querySelector(classOrId);\n\nexport const qsa = (classOrId: string, container?: Element) =>\n  (container || document).querySelectorAll(classOrId);\n","import { qsa } from './dom-utils';\n\nexport const toggleRow = (rowNumber: number) => {\n  const rowSelectors = [\n    '.env-group, .sample-group, .mix-group',\n    '.filter-group,  .feedback-group',\n    '.loop-group, .trim-group, .misc-group, .lfo-group',\n    '.toggle-group, .keyboard-group',\n  ];\n\n  const selector = rowSelectors[rowNumber - 1];\n  if (!selector) return;\n  const groups = qsa(selector);\n\n  if (groups.length === 0) return;\n  const allCollapsed = Array.from(groups).every((g) =>\n    g.classList.contains('collapsed')\n  );\n\n  groups.forEach((group) => group.classList.toggle('collapsed', !allCollapsed));\n};\n\nexport function addExpandCollapseListeners() {\n  document.addEventListener('click', (e: MouseEvent) => {\n    const target = e.target as EventTarget | null;\n    if (!(target instanceof Element)) return;\n\n    // Toggle a single group's collapse by legend\n    const legend = target.closest('.expandable-legend');\n    if (legend) {\n      legend.closest('.control-group')?.classList.toggle('collapsed');\n    }\n\n    // Toggle an entire row\n    const rowIcon = target.closest('.row-collapse-icon');\n    if (rowIcon) {\n      const rowAttr = rowIcon.getAttribute('data-row');\n      const row = Number.parseInt(rowAttr ?? '', 10);\n      if (Number.isFinite(row) && row > 0) {\n        toggleRow(row);\n      }\n    }\n  });\n}\n","import { Component, onMount, createSignal } from 'solid-js';\nimport type { SamplerElement } from '@repo/audio-components';\nimport { addExpandCollapseListeners } from './utils/expandCollapse';\n\nconst App: Component = () => {\n  const [layout, setLayout] = createSignal<'desktop' | 'tablet' | 'mobile'>(\n    'desktop'\n  );\n\n  let samplerRef: SamplerElement | undefined;\n  const [sampleLoaded, setSampleLoaded] = createSignal(false);\n  const [paramsChanged, setParamsChanged] = createSignal(false);\n\n  onMount(() => {\n    const handleSampleLoaded = () => {\n      if (samplerRef) {\n        const samplePlayer = samplerRef.getSamplePlayer();\n        setSampleLoaded(true);\n      }\n    };\n\n    // Simple responsive layout detection\n    const updateLayout = () => {\n      const width = window.innerWidth;\n\n      if (width < 800) {\n        setLayout('mobile');\n      } else if (width < 1200) {\n        setLayout('tablet');\n      } else {\n        setLayout('desktop');\n      }\n    };\n\n    document.addEventListener('sample-loaded', handleSampleLoaded);\n    window.addEventListener('resize', updateLayout);\n\n    updateLayout(); // Initial check\n\n    // Add expand/collapse listeners\n    addExpandCollapseListeners();\n\n    return () => {\n      document.removeEventListener('sample-loaded', handleSampleLoaded);\n      window.removeEventListener('resize', updateLayout);\n    };\n  });\n\n  return (\n    <div id='page-wrapper' class='page-wrapper'>\n      <div class={`control-grid layout-${layout()}`} id='sampler-container'>\n        {/* Sampler Audio Engine */}\n        <sampler-element\n          ref={samplerRef}\n          node-id='test-sampler'\n          debug-mode='false'\n        />\n\n        {/* Controls */}\n        <fieldset class='control-group env-group'>\n          <legend class='expandable-legend'>Envelopes</legend>\n          <div class='expandable-content'>\n            <envelope-switcher height='225px' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group sample-group'>\n          <legend class='expandable-legend'>Sample</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <record-button\n                target-node-id='test-sampler'\n                show-status='false'\n              />\n              <input-select target-node-id='test-sampler' />\n            </div>\n            <load-button target-node-id='test-sampler' show-status='false' />\n            <button\n              class='reset-button'\n              title='Reset knobs'\n              disabled={!sampleLoaded()}\n              onclick={() => {\n                const knobElements = document.querySelectorAll('knob-element');\n                knobElements.forEach((knob) => {\n                  (knob as any).resetToDefault();\n                });\n              }}\n            >\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 256 256'\n                fill='none'\n              >\n                <path d='M139.141 232.184c78.736 0 127.946-85.236 88.579-153.424-39.369-68.187-137.789-68.187-177.158 0A102.125 102.125 0 0 0 43.71 93.1m62.258-5.371c-14.966 5.594-35.547 10.026-48.737 19.272-2.137 1.497-26.015 16.195-26.049 13.991C27.503 98.21 13.21 75.873 13.21 52.583' />\n              </svg>\n            </button>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group mix-group'>\n          <legend class='expandable-legend'>Mix</legend>\n          <div class='expandable-content'>\n            <volume-knob target-node-id='test-sampler' />\n            <dry-wet-knob target-node-id='test-sampler' />\n            <reverb-send-knob label='RevSend' target-node-id='test-sampler' />\n            <reverb-size-knob label='RevSize' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        {/* <fieldset class='control-group space-group'>\n          <legend class='expandable-legend'>Space</legend>\n          <div class='expandable-content'>\n            <reverb-send-knob label='RevSend' target-node-id='test-sampler' />\n            <reverb-size-knob label='RevSize' target-node-id='test-sampler' />\n          </div>\n        </fieldset> */}\n\n        <fieldset class='control-group filter-group'>\n          <legend class='expandable-legend'>Filters</legend>\n          <div class='expandable-content'>\n            <highpass-filter-knob target-node-id='test-sampler' />\n            <lowpass-filter-knob target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group misc-group'>\n          <legend class='expandable-legend'>Misc</legend>\n          <div class='expandable-content'>\n            <distortion-knob target-node-id='test-sampler' />\n            <am-modulation label='AM' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group loop-group'>\n          <legend class='expandable-legend'>Loop</legend>\n          <div class='expandable-content'>\n            <loop-start-knob target-node-id='test-sampler' label='Start' />\n            <loop-duration-knob\n              target-node-id='test-sampler'\n              label='Duration'\n            />\n            <div class='flex-col'>\n              <loop-duration-drift-knob\n                target-node-id='test-sampler'\n                label='Drift'\n              />\n              <pan-drift-toggle target-node-id='test-sampler' />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group trim-group'>\n          <legend class='expandable-legend'>Trim</legend>\n          <div class='expandable-content'>\n            <trim-start-knob target-node-id='test-sampler' />\n            <trim-end-knob target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group feedback-group'>\n          <legend class='expandable-legend'>Feedback</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <feedback-knob target-node-id='test-sampler' label='Amount' />\n              <feedback-mode-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <div class='flex-row'>\n              <div class='flex-col'>\n                <feedback-pitch-knob\n                  target-node-id='test-sampler'\n                  label='Pitch'\n                />\n                <feedback-lpf-knob\n                  label='Lowpass'\n                  class='fb-lpf-knob'\n                  target-node-id='test-sampler'\n                />\n              </div>\n              <feedback-decay-knob\n                target-node-id='test-sampler'\n                label='Decay'\n              />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group lfo-group'>\n          <legend class='expandable-legend'>LFO's</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <gain-lfo-rate-knob target-node-id='test-sampler' label='Rate' />\n              <gain-lfo-sync-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <gain-lfo-depth-knob target-node-id='test-sampler' label='Depth' />\n            <div class='flex-col'>\n              <pitch-lfo-rate-knob target-node-id='test-sampler' label='Rate' />\n              <pitch-lfo-sync-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <pitch-lfo-depth-knob target-node-id='test-sampler' label='Depth' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group toggle-group'>\n          <legend class='expandable-legend'>Toggles</legend>\n          <div class='expandable-content'>\n            <midi-toggle target-node-id='test-sampler' />\n            <playback-direction-toggle target-node-id='test-sampler' />\n            <loop-lock-toggle target-node-id='test-sampler' />\n            <hold-lock-toggle target-node-id='test-sampler' />\n            <pitch-toggle target-node-id='test-sampler' />\n            <sampler-status target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group keyboard-group'>\n          <legend class='expandable-legend'>Keyboard</legend>\n          <computer-keyboard target-node-id='test-sampler' />\n          <div class='expandable-content'>\n            <piano-keyboard\n              id='piano-keyboard'\n              class='piano-keyboard'\n              target-node-id='test-sampler'\n              width='700'\n              height='80'\n            />\n            <div class='keyboard-controls'>\n              <div class='flex-row'>\n                <rootnote-select\n                  show-label='false'\n                  target-node-id='test-sampler'\n                />\n                <keymap-select\n                  show-label='false'\n                  target-node-id='test-sampler'\n                />\n              </div>\n\n              <glide-knob target-node-id='test-sampler' />\n            </div>\n          </div>\n        </fieldset>\n\n        {/* Row collapse icons */}\n        <div class='row-collapse-icon' data-row='1' style='grid-area: mix' />\n        <div\n          class='row-collapse-icon'\n          data-row='2'\n          style='grid-area: feedback'\n        />\n        <div class='row-collapse-icon' data-row='3' style='grid-area: lfo' />\n        <div\n          class='row-collapse-icon'\n          data-row='4'\n          style='grid-area: keyboard'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/* @refresh reload */\nimport { render } from 'solid-js/web';\nimport { defineSampler } from '@repo/audio-components';\nimport App from './App';\nimport './style.css';\n\ndefineSampler(); // Define all web components for the sampler\n\nconst root = document.getElementById('root');\n\nif (import.meta.env.DEV && !(root instanceof HTMLElement)) {\n  throw new Error(\n    'Root element not found. Did you forget to add it to your index.html? Or maybe the id attribute got misspelled?'\n  );\n}\n\nrender(() => <App />, root!);\n"],"names":["qsa","classOrId","container","toggleRow","rowNumber","selector","groups","allCollapsed","g","group","addExpandCollapseListeners","e","target","legend","_a","rowIcon","rowAttr","row","App","layout","setLayout","createSignal","samplerRef","sampleLoaded","setSampleLoaded","onMount","handleSampleLoaded","getSamplePlayer","updateLayout","width","window","innerWidth","document","addEventListener","removeEventListener","_el$","_tmpl$","_el$2","firstChild","_el$3","_el$4","nextSibling","_el$5","_el$6","_el$7","_el$8","_el$9","_el$0","_el$1","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","_el$17","_el$18","_el$19","_el$20","_el$21","_el$22","_el$23","_el$24","_el$25","_el$26","_el$27","_el$28","_el$29","_el$30","_el$31","_el$32","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","_el$39","_el$40","_el$41","_el$42","_el$43","_el$44","_el$45","_el$46","_el$47","_el$48","_el$49","_el$50","_el$51","_el$52","_el$53","_el$54","_el$55","_el$56","_el$57","_el$58","_el$59","_el$60","_el$61","_el$62","_el$63","_el$64","_el$65","_el$66","_el$67","_el$68","_el$69","_el$70","_el$71","_el$72","_el$73","_el$74","_el$75","_el$76","_el$77","_el$78","_el$79","_el$80","_el$81","_el$82","_el$83","_el$84","_ref$","_$use","_$owner","_$getOwner","$$click","querySelectorAll","forEach","knob","resetToDefault","_$effect","_p$","_v$","_v$2","_$className","t","disabled","undefined","_$delegateEvents","defineSampler","root","getElementById","render","_$createComponent"],"mappings":"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"}