{"version":3,"file":"index-BJSGWo3C.js","sources":["../../src/utils/dom-utils.ts","../../src/main.ts"],"sourcesContent":["export const qs = (classOrId: string, container?: Element) =>\n  (container || document).querySelector(classOrId);\n\nexport const qsa = (classOrId: string, container?: Element) =>\n  (container || document).querySelectorAll(classOrId);\n","import { defineSampler } from '@repo/audio-components';\nimport { qsa } from './utils';\n\ndefineSampler(); // Define all sampler components\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.debug('playground initialized');\n\n  document.addEventListener('click', (e: MouseEvent) => {\n    const target = e.target as EventTarget | null;\n    if (!(target instanceof Element)) return;\n\n    // Toggle a single group's collapse by legend (support clicks on descendants)\n    const legend = target.closest('.expandable-legend');\n    if (legend) {\n      legend.closest('.control-group')?.classList.toggle('collapsed');\n    }\n\n    // Toggle an entire row (support clicks on descendants)\n    const rowIcon = target.closest('.row-collapse-icon');\n    if (rowIcon) {\n      const rowAttr = rowIcon.getAttribute('data-row');\n      const row = Number.parseInt(rowAttr ?? '', 10);\n      if (Number.isFinite(row) && row > 0) {\n        toggleRow(row);\n      }\n    }\n  });\n});\n\nfunction toggleRow(rowNumber: number) {\n  const rowSelectors = [\n    '.env-group, .sample-group, .mix-group, .distortion-group',\n    '.filter-group, .reverb-group, .mod-group',\n    '.loop-group, .trim-group, .feedback-group, .amp-lfo-group, .pitch-lfo-group',\n    '.toggle-group, .keyboard-group',\n  ];\n\n  const selector = rowSelectors[rowNumber - 1];\n  if (!selector) return;\n  const groups = qsa(selector);\n\n  if (groups.length === 0) return;\n  const allCollapsed = Array.from(groups).every((g) =>\n    g.classList.contains('collapsed')\n  );\n\n  groups.forEach((group) => group.classList.toggle('collapsed', !allCollapsed));\n}\n\n// import { qs } from './utils';\n// import { makeDraggable } from './utils/makeDraggable';\n\n// const samplerContainerEl = qs('#sampler-container');\n\n// createAndAppendHandle(samplerContainerEl);\n// if (samplerContainerEl) {\n//   makeDraggable(\n//     {\n//       element: samplerContainerEl,\n//       handleClassName: '.drag-handle',\n//     },\n//     {\n//       type: 'x,y',\n//     }\n//   );\n// }\n\n// function createAndAppendHandle(element: Element | null) {\n//   if (!element || element.querySelector('.drag-handle')) return;\n//   const handle = document.createElement('div');\n//   handle.className = 'drag-handle';\n//   handle.setAttribute('aria-label', 'Drag to move this control group');\n//   element.appendChild(handle);\n// }\n"],"names":["qsa","classOrId","container","defineSampler","e","target","legend","_a","rowIcon","rowAttr","row","toggleRow","rowNumber","selector","groups","allCollapsed","g","group"],"mappings":"wxBAGO,MAAMA,EAAM,CAACC,EAAmBC,IACvB,SAAU,iBAAiBD,CAAS,ECDpDE,EAAA,EAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,QAAQ,MAAM,wBAAwB,EAEtC,SAAS,iBAAiB,QAAUC,GAAkB,OACpD,MAAMC,EAASD,EAAE,OACjB,GAAI,EAAEC,aAAkB,SAAU,OAGlC,MAAMC,EAASD,EAAO,QAAQ,oBAAoB,EAC9CC,KACFC,EAAAD,EAAO,QAAQ,gBAAgB,IAA/B,MAAAC,EAAkC,UAAU,OAAO,cAIrD,MAAMC,EAAUH,EAAO,QAAQ,oBAAoB,EACnD,GAAIG,EAAS,CACX,MAAMC,EAAUD,EAAQ,aAAa,UAAU,EACzCE,EAAM,OAAO,SAASD,GAAW,GAAI,EAAE,EACzC,OAAO,SAASC,CAAG,GAAKA,EAAM,GAChCC,EAAUD,CAAG,CACf,CACF,CACD,CACH,CAAC,EAED,SAASC,EAAUC,EAAmB,CAQpC,MAAMC,EAPe,CACnB,2DACA,2CACA,8EACA,gCAAA,EAG4BD,EAAY,CAAC,EAC3C,GAAI,CAACC,EAAU,OACf,MAAMC,EAASd,EAAIa,CAAQ,EAE3B,GAAIC,EAAO,SAAW,EAAG,OACzB,MAAMC,EAAe,MAAM,KAAKD,CAAM,EAAE,MAAOE,GAC7CA,EAAE,UAAU,SAAS,WAAW,CAAA,EAGlCF,EAAO,QAASG,GAAUA,EAAM,UAAU,OAAO,YAAa,CAACF,CAAY,CAAC,CAC9E"}