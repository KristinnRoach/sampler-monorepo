{"version":3,"file":"index-BVYLMX4k.js","sources":["../../src/utils/dom-utils.ts","../../src/utils/expandCollapse.ts","../../src/db/samplelib/sampleIdb.ts","../../src/utils/instrumentState.ts","../../src/components/SaveButton.tsx","../../src/components/Sidebar.tsx","../../src/components/SidebarToggle.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["export const qs = (classOrId: string, container?: Element) =>\n  (container || document).querySelector(classOrId);\n\nexport const qsa = (classOrId: string, container?: Element) =>\n  (container || document).querySelectorAll(classOrId);\n","import { qsa } from './dom-utils';\n\nexport const toggleRow = (rowNumber: number) => {\n  const rowSelectors = [\n    '.env-group, .sample-group, .mix-group',\n    '.filter-group,  .feedback-group',\n    '.loop-group, .trim-group, .misc-group, .lfo-group',\n    '.toggle-group, .keyboard-group',\n  ];\n\n  const selector = rowSelectors[rowNumber - 1];\n  if (!selector) return;\n  const groups = qsa(selector);\n\n  if (groups.length === 0) return;\n  const allCollapsed = Array.from(groups).every((g) =>\n    g.classList.contains('collapsed')\n  );\n\n  groups.forEach((group) => group.classList.toggle('collapsed', !allCollapsed));\n};\n\nexport function addExpandCollapseListeners() {\n  document.addEventListener('click', (e: MouseEvent) => {\n    const target = e.target as EventTarget | null;\n    if (!(target instanceof Element)) return;\n\n    // Toggle a single group's collapse by legend\n    const legend = target.closest('.expandable-legend');\n    if (legend) {\n      legend.closest('.control-group')?.classList.toggle('collapsed');\n    }\n\n    // Toggle an entire row\n    const rowIcon = target.closest('.row-collapse-icon');\n    if (rowIcon) {\n      const rowAttr = rowIcon.getAttribute('data-row');\n      const row = Number.parseInt(rowAttr ?? '', 10);\n      if (Number.isFinite(row) && row > 0) {\n        toggleRow(row);\n      }\n    }\n  });\n}\n","// db/sampleDatabase.ts\nimport Dexie, { Table } from 'dexie';\n\nexport interface SavedSample {\n  id?: number;\n  name: string;\n  audioData: ArrayBuffer;\n  sampleRate?: number;\n  channels?: number;\n  createdAt?: Date;\n  settings?: any; // Instrument settings (knobs, toggles, etc.)\n}\n\nexport class SampleDatabase extends Dexie {\n  samples!: Table<SavedSample>;\n\n  constructor() {\n    super('SampleDatabase');\n    this.version(1).stores({\n      samples: '++id, name, createdAt',\n    });\n  }\n}\n\nexport const db = new SampleDatabase();\n","// instrumentState.ts - Utilities for capturing and restoring instrument state\n\nexport interface EnvelopeSettings {\n  points: Array<{ time: number; value: number; curve?: string }>;\n  sustainPointIndex?: number | null;\n  releasePointIndex?: number;\n  isEnabled: boolean;\n  loopEnabled: boolean;\n  syncedToPlaybackRate: boolean;\n  timeScale?: number;\n}\n\nexport interface InstrumentSettings {\n  knobs: Record<string, number>;\n  toggles: Record<string, boolean | string>;\n  envelopes: Record<string, EnvelopeSettings>;\n  selects: Record<string, string>;\n  tempo: number;\n}\n\n/**\n * Captures the current state of all instrument controls\n */\nexport function captureInstrumentState(): InstrumentSettings {\n  const state: InstrumentSettings = {\n    knobs: {},\n    toggles: {},\n    envelopes: {},\n    selects: {},\n    tempo: 120,\n  };\n\n  // Capture all knob values\n  // First, capture knobs that are wrapped in custom elements\n  const knobWrappers = [\n    'volume-knob',\n    'dry-wet-knob',\n    'reverb-send-knob',\n    'reverb-size-knob',\n    'delay-send-knob',\n    'delay-time-knob',\n    'delay-feedback-knob',\n    'highpass-filter-knob',\n    'lowpass-filter-knob',\n    'distortion-knob',\n    'am-modulation',\n    'loop-start-knob',\n    'loop-duration-knob',\n    'loop-duration-drift-knob',\n    'trim-start-knob',\n    'trim-end-knob',\n    'feedback-knob',\n    'feedback-pitch-knob',\n    'feedback-lpf-knob',\n    'feedback-decay-knob',\n    'gain-lfo-rate-knob',\n    'gain-lfo-depth-knob',\n    'pitch-lfo-rate-knob',\n    'pitch-lfo-depth-knob',\n    'glide-knob',\n  ];\n\n  knobWrappers.forEach((tagName) => {\n    const wrapper = document.querySelector(tagName);\n    if (wrapper) {\n      // Look for knob-element inside the wrapper\n      const knobElement = wrapper.querySelector('knob-element') as any;\n      if (knobElement) {\n        if (knobElement.getValue) {\n          state.knobs[tagName] = knobElement.getValue();\n        } else if (knobElement.value !== undefined) {\n          state.knobs[tagName] = knobElement.value;\n        }\n      } else {\n        // The wrapper itself might be the knob element\n        const element = wrapper as any;\n        if (element.getValue) {\n          state.knobs[tagName] = element.getValue();\n        } else if (element.value !== undefined) {\n          state.knobs[tagName] = element.value;\n        }\n      }\n    }\n  });\n\n  // Capture tempo knob (special case as it's a custom element)\n  const tempoKnob = document.querySelector('tempo-knob');\n  if (tempoKnob && (tempoKnob as any).getValue) {\n    state.tempo = (tempoKnob as any).getValue();\n  }\n\n  // Capture all toggle states\n  const toggleMappings: Record<string, string[]> = {\n    'midi-toggle': ['midi_on', 'midi_off'],\n    'playback-direction-toggle': ['direction_forward', 'direction_reverse'],\n    'loop-lock-toggle': ['loop_locked', 'loop_unlocked'],\n    'hold-lock-toggle': ['hold_locked', 'hold_unlocked'],\n    'pitch-toggle': ['pitch_on', 'pitch_off'],\n  };\n\n  // Capture SVG button toggles\n  Object.entries(toggleMappings).forEach(([tagName, states]) => {\n    const wrapper = document.querySelector(tagName);\n    if (wrapper) {\n      // Look for the SVG button inside\n      const button = wrapper.querySelector('button.svg-button') as any;\n      if (button && button.getState) {\n        const currentState = button.getState();\n        state.toggles[tagName] = currentState;\n      }\n    }\n  });\n\n  // Capture van-based toggles (feedback mode, LFO sync, pan drift)\n  const vanToggles = [\n    'pan-drift-toggle',\n    'feedback-mode-toggle',\n    'gain-lfo-sync-toggle',\n    'pitch-lfo-sync-toggle',\n  ];\n\n  vanToggles.forEach((tagName) => {\n    const toggle = document.querySelector(tagName);\n    if (toggle) {\n      const element = toggle as any;\n      let isActive = false;\n\n      // Van-based toggles likely use the active property\n      if (element.isActive) {\n        isActive = element.isActive();\n      } else if (element.active !== undefined) {\n        isActive = element.active;\n      } else if (element.checked !== undefined) {\n        isActive = element.checked;\n      }\n\n      state.toggles[tagName] = isActive;\n    }\n  });\n\n  // Capture select/dropdown values\n  const selects = ['rootnote-select', 'keymap-select', 'input-select'];\n  selects.forEach((tagName) => {\n    const wrapper = document.querySelector(tagName);\n    if (wrapper) {\n      // Look for the actual select element inside\n      const selectElement = wrapper.querySelector(\n        'select'\n      ) as HTMLSelectElement;\n      if (selectElement) {\n        const value = selectElement.value;\n        state.selects[tagName] = value;\n      } else {\n        // Fallback to wrapper element properties\n        const element = wrapper as any;\n        let value = '';\n        if (element.getValue) {\n          value = element.getValue();\n        } else if (element.value !== undefined) {\n          value = element.value;\n        }\n        if (value) {\n          state.selects[tagName] = value;\n        }\n      }\n    }\n  });\n\n  // Capture waveform-select inside am-modulation\n  const amModulation = document.querySelector('am-modulation');\n  if (amModulation) {\n    const waveformSelect = amModulation.querySelector(\n      'select'\n    ) as HTMLSelectElement;\n    if (waveformSelect) {\n      const value = waveformSelect.value;\n      state.selects['waveform-select'] = value;\n    }\n  }\n\n  // Capture envelope states\n  const samplerElement = document.querySelector('sampler-element') as any;\n  if (samplerElement?.getSamplePlayer) {\n    const sampler = samplerElement.getSamplePlayer();\n    if (sampler && sampler.initialized) {\n      // Capture all three envelope types\n      const envelopeTypes = ['amp-env', 'filter-env', 'pitch-env'] as const;\n\n      envelopeTypes.forEach((envType) => {\n        try {\n          const envelope = sampler.getEnvelope(envType);\n          if (envelope) {\n            state.envelopes[envType] = {\n              points: envelope.points.map((p: any) => ({\n                time: p.time,\n                value: p.value,\n                curve: p.curve || 'linear',\n              })),\n              sustainPointIndex: envelope.sustainPointIndex || null,\n              releasePointIndex: envelope.releasePointIndex,\n              isEnabled: envelope.isEnabled,\n              loopEnabled: envelope.loopEnabled,\n              syncedToPlaybackRate: envelope.syncedToPlaybackRate,\n              timeScale: envelope.timeScale || 1,\n            };\n          }\n        } catch (error) {\n          console.warn(`Could not capture envelope ${envType}:`, error);\n        }\n      });\n    }\n  }\n\n  return state;\n}\n\n/**\n * Restores instrument state from saved settings\n */\nexport function restoreInstrumentState(settings: InstrumentSettings): void {\n  // Restore knob values\n  Object.entries(settings.knobs).forEach(([tagName, value]) => {\n    // First try to find the wrapper element\n    const wrapper = document.querySelector(tagName);\n    if (wrapper) {\n      // Look for knob-element inside the wrapper\n      const knobElement = wrapper.querySelector('knob-element') as any;\n      if (knobElement) {\n        if (knobElement.setValue) {\n          knobElement.setValue(value);\n        } else if (knobElement.value !== undefined) {\n          knobElement.value = value;\n        }\n      } else {\n        // The wrapper itself might be the knob element\n        const element = wrapper as any;\n        if (element.setValue) {\n          element.setValue(value);\n        } else if (element.value !== undefined) {\n          element.value = value;\n        }\n      }\n    }\n  });\n\n  // Restore tempo\n  if (settings.tempo) {\n    const tempoKnob = document.querySelector('tempo-knob');\n    if (tempoKnob && (tempoKnob as any).setValue) {\n      (tempoKnob as any).setValue(settings.tempo);\n    }\n  }\n\n  // Restore toggle states\n  Object.entries(settings.toggles).forEach(([tagName, value]) => {\n    // Check if this is an SVG button toggle (stores state string) or a boolean toggle\n    const isSvgButton =\n      typeof value === 'string' &&\n      [\n        'midi_on',\n        'midi_off',\n        'direction_forward',\n        'direction_reverse',\n        'loop_locked',\n        'loop_unlocked',\n        'hold_locked',\n        'hold_unlocked',\n        'pitch_on',\n        'pitch_off',\n      ].includes(value);\n\n    if (isSvgButton) {\n      // Handle SVG button toggles\n      const wrapper = document.querySelector(tagName);\n      if (wrapper) {\n        const button = wrapper.querySelector('button.svg-button') as any;\n        if (button && button.setState) {\n          // Simply set the button state - this updates the visual\n          button.setState(value);\n\n          // Now we need to update the sampler state to match\n          // We'll do this by getting the sampler and calling the appropriate method\n          const samplerElement = document.querySelector(\n            'sampler-element'\n          ) as any;\n          if (samplerElement?.getSamplePlayer) {\n            const sampler = samplerElement.getSamplePlayer();\n            if (sampler) {\n              // Apply the state to the sampler based on the toggle type\n              switch (tagName) {\n                case 'midi-toggle':\n                  if (value === 'midi_on') sampler.enableMIDI();\n                  else sampler.disableMIDI();\n                  break;\n                case 'playback-direction-toggle':\n                  sampler.setPlaybackDirection(\n                    value === 'direction_reverse' ? 'reverse' : 'forward'\n                  );\n                  break;\n                case 'loop-lock-toggle':\n                  sampler.setLoopLocked(value === 'loop_locked');\n                  break;\n                case 'hold-lock-toggle':\n                  sampler.setHoldLocked(value === 'hold_locked');\n                  break;\n                case 'pitch-toggle':\n                  if (value === 'pitch_on') sampler.enablePitch();\n                  else sampler.disablePitch();\n                  break;\n              }\n            }\n          }\n        } else {\n          console.warn(\n            `[InstrumentState] Could not find SVG button in ${tagName}`\n          );\n        }\n      } else {\n        console.warn(`[InstrumentState] Could not find wrapper: ${tagName}`);\n      }\n    } else {\n      // Handle van-based boolean toggles\n      const toggle = document.querySelector(tagName);\n      if (toggle) {\n        const element = toggle as any;\n        const isActive = value as boolean;\n\n        // Try different methods to set the toggle state\n        if (element.setActive) {\n          element.setActive(isActive);\n        } else if (element.active !== undefined) {\n          element.active = isActive;\n        } else if (element.checked !== undefined) {\n          element.checked = isActive;\n        } else if (element.toggle) {\n          // Some toggles might need to be toggled to the right state\n          const currentState = element.active || element.checked || false;\n          if (currentState !== isActive) {\n            element.toggle();\n          }\n        }\n\n        // Dispatch change event to notify listeners\n        toggle.dispatchEvent(\n          new CustomEvent('toggle', {\n            bubbles: true,\n            detail: { active: isActive },\n          })\n        );\n      } else {\n        console.warn(`[InstrumentState] Could not find toggle: ${tagName}`);\n      }\n    }\n  });\n\n  // Restore select values\n  Object.entries(settings.selects).forEach(([tagName, value]) => {\n    // Special handling for waveform-select inside am-modulation\n    if (tagName === 'waveform-select') {\n      const amModulation = document.querySelector('am-modulation');\n      if (amModulation) {\n        const waveformSelect = amModulation.querySelector(\n          'select'\n        ) as HTMLSelectElement;\n        if (waveformSelect) {\n          waveformSelect.value = value;\n          waveformSelect.dispatchEvent(new Event('change', { bubbles: true }));\n\n          // Update sampler directly\n          const samplerElement = document.querySelector(\n            'sampler-element'\n          ) as any;\n          if (samplerElement?.getSamplePlayer) {\n            const sampler = samplerElement.getSamplePlayer();\n            if (sampler) {\n              sampler.setModulationWaveform('AM', value);\n            }\n          }\n        }\n      }\n      return; // Skip the rest of the logic for this special case\n    }\n\n    const wrapper = document.querySelector(tagName);\n    if (wrapper) {\n      // Look for the actual select element inside\n      const selectElement = wrapper.querySelector(\n        'select'\n      ) as HTMLSelectElement;\n      if (selectElement) {\n        selectElement.value = value;\n        // Dispatch change event to trigger Van.js state update\n        selectElement.dispatchEvent(new Event('change', { bubbles: true }));\n\n        // Also update the sampler directly to ensure state is synced\n        const samplerElement = document.querySelector('sampler-element') as any;\n        if (samplerElement?.getSamplePlayer) {\n          const sampler = samplerElement.getSamplePlayer();\n          if (sampler) {\n            switch (tagName) {\n              case 'rootnote-select':\n                sampler.setRootNote(value);\n                break;\n              case 'keymap-select':\n                // Dispatch keymap change event for keyboard components\n                // The keyboard component needs the actual keymap data\n                // We'll let the select's change event handle this properly\n                // by not interfering with the natural flow\n                break;\n              case 'input-select':\n                sampler.setRecorderInputSource(value);\n                break;\n            }\n          }\n        }\n      } else {\n        // Fallback to wrapper element methods\n        const element = wrapper as any;\n        if (element.setValue) {\n          element.setValue(value);\n        } else if (element.value !== undefined) {\n          element.value = value;\n          element.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n      }\n    } else {\n      console.warn(`[InstrumentState] Could not find select: ${tagName}`);\n    }\n  });\n\n  // Restore envelopes\n  Object.entries(settings.envelopes).forEach(([envType, envData]) => {\n    const samplerElement = document.querySelector('sampler-element') as any;\n    if (samplerElement?.getSamplePlayer) {\n      const sampler = samplerElement.getSamplePlayer();\n      if (sampler && sampler.initialized) {\n        try {\n          const envelope = sampler.getEnvelope(envType);\n          if (envelope && envData) {\n            // Clear existing points except first and last\n            const currentPoints = envelope.points.length;\n            for (let i = currentPoints - 2; i > 0; i--) {\n              envelope.deletePoint(i);\n            }\n\n            // Update first and last points\n            if (envData.points.length >= 2) {\n              envelope.updatePoint(\n                0,\n                envData.points[0].time,\n                envData.points[0].value\n              );\n              const lastIdx = envelope.points.length - 1;\n              const lastPoint = envData.points[envData.points.length - 1];\n              envelope.updatePoint(lastIdx, lastPoint.time, lastPoint.value);\n\n              // Add intermediate points\n              for (let i = 1; i < envData.points.length - 1; i++) {\n                const point = envData.points[i];\n                envelope.addPoint(point.time, point.value, point.curve);\n              }\n            }\n\n            // Restore settings\n            if (\n              envData.sustainPointIndex !== null &&\n              envData.sustainPointIndex !== undefined\n            ) {\n              sampler.setEnvelopeSustainPoint(\n                envType,\n                envData.sustainPointIndex\n              );\n            }\n\n            if (envData.releasePointIndex !== undefined) {\n              sampler.setEnvelopeReleasePoint(\n                envType,\n                envData.releasePointIndex\n              );\n            }\n\n            // Enable/disable envelope\n            if (envData.isEnabled) {\n              sampler.enableEnvelope(envType);\n            } else {\n              sampler.disableEnvelope(envType);\n            }\n\n            // Set loop and sync\n            sampler.setEnvelopeLoop(envType, envData.loopEnabled);\n            sampler.setEnvelopeSync(envType, envData.syncedToPlaybackRate);\n\n            if (envData.timeScale) {\n              sampler.setEnvelopeTimeScale(envType, envData.timeScale);\n            }\n\n            // Trigger envelope update message to refresh UI\n            sampler.sendUpstreamMessage(`${envType}:created`, {});\n\n            // Also dispatch a custom event for any UI components listening\n            document.dispatchEvent(\n              new CustomEvent('envelope-restored', {\n                detail: { envType, targetNodeId: 'test-sampler' },\n              })\n            );\n          }\n        } catch (error) {\n          console.warn(`Could not restore envelope ${envType}:`, error);\n        }\n      }\n    }\n  });\n}\n\n/**\n * Creates a snapshot of just the essential performance settings\n * (a lighter alternative that captures only the most important parameters)\n */\nexport function captureEssentialSettings() {\n  return {\n    // Core sound parameters\n    volume: getKnobValue('volume-knob'),\n    dryWet: getKnobValue('dry-wet-knob'),\n    trimStart: getKnobValue('trim-start-knob'),\n    trimEnd: getKnobValue('trim-end-knob'),\n\n    // Effects\n    reverbSend: getKnobValue('reverb-send-knob'),\n    reverbSize: getKnobValue('reverb-size-knob'),\n    delaySend: getKnobValue('delay-send-knob'),\n    delayTime: getKnobValue('delay-time-knob'),\n    delayFeedback: getKnobValue('delay-feedback-knob'),\n    distortion: getKnobValue('distortion-knob'),\n\n    // Filters\n    highpass: getKnobValue('highpass-filter-knob'),\n    lowpass: getKnobValue('lowpass-filter-knob'),\n\n    // Loop\n    loopStart: getKnobValue('loop-start-knob'),\n    loopDuration: getKnobValue('loop-duration-knob'),\n\n    // Modulation\n    pitchLfoRate: getKnobValue('pitch-lfo-rate-knob'),\n    pitchLfoDepth: getKnobValue('pitch-lfo-depth-knob'),\n    gainLfoRate: getKnobValue('gain-lfo-rate-knob'),\n    gainLfoDepth: getKnobValue('gain-lfo-depth-knob'),\n\n    // Performance\n    glide: getKnobValue('glide-knob'),\n    tempo: getKnobValue('tempo-knob'),\n\n    // Toggles\n    midiEnabled: getToggleState('midi-toggle'),\n    loopLocked: getToggleState('loop-lock-toggle'),\n    pitchEnabled: getToggleState('pitch-toggle'),\n  };\n}\n\n// Helper functions\nfunction getKnobValue(selector: string): number {\n  const element = document.querySelector(selector) as any;\n  if (element?.getValue) return element.getValue();\n  if (element?.value !== undefined) return element.value;\n  return 0;\n}\n\nfunction getToggleState(selector: string): boolean {\n  const element = document.querySelector(selector) as any;\n  if (element?.active !== undefined) return element.active;\n  if (element?.checked !== undefined) return element.checked;\n  return element?.getAttribute('active') !== null;\n}\n","// components/SaveButton.tsx\nimport { Component, createSignal } from 'solid-js';\nimport { db, SavedSample } from '../db/samplelib/sampleIdb';\nimport { captureInstrumentState } from '../utils/instrumentState';\n// import { SaveButton as SaveSVGButton } from '@repo/audio-components';\n\nfunction audioBufferToWav(buffer: AudioBuffer): ArrayBuffer {\n  const length = buffer.length;\n  const numberOfChannels = buffer.numberOfChannels;\n  const sampleRate = buffer.sampleRate;\n  const arrayBuffer = new ArrayBuffer(44 + length * numberOfChannels * 2);\n  const view = new DataView(arrayBuffer);\n\n  // WAV header\n  const writeString = (offset: number, string: string) => {\n    for (let i = 0; i < string.length; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  };\n\n  writeString(0, 'RIFF');\n  view.setUint32(4, 36 + length * numberOfChannels * 2, true);\n  writeString(8, 'WAVE');\n  writeString(12, 'fmt ');\n  view.setUint32(16, 16, true);\n  view.setUint16(20, 1, true);\n  view.setUint16(22, numberOfChannels, true);\n  view.setUint32(24, sampleRate, true);\n  view.setUint32(28, sampleRate * numberOfChannels * 2, true);\n  view.setUint16(32, numberOfChannels * 2, true);\n  view.setUint16(34, 16, true);\n  writeString(36, 'data');\n  view.setUint32(40, length * numberOfChannels * 2, true);\n\n  // Convert float samples to 16-bit PCM\n  let offset = 44;\n  for (let i = 0; i < length; i++) {\n    for (let channel = 0; channel < numberOfChannels; channel++) {\n      const sample = Math.max(\n        -1,\n        Math.min(1, buffer.getChannelData(channel)[i])\n      );\n      view.setInt16(\n        offset,\n        sample < 0 ? sample * 0x8000 : sample * 0x7fff,\n        true\n      );\n      offset += 2;\n    }\n  }\n\n  return arrayBuffer;\n}\n\ninterface SaveButtonProps {\n  audioBuffer: AudioBuffer | null;\n  isOpen?: boolean;\n  disabled?: boolean;\n  class?: string;\n}\n\nconst SaveButton: Component<SaveButtonProps> = (props) => {\n  const [saving, setSaving] = createSignal(false);\n\n  const handleSave = async () => {\n    if (!props.audioBuffer) return;\n\n    setSaving(true);\n    try {\n      const name = prompt('Enter sample name:') || `Sample_${Date.now()}`;\n\n      const wavData = audioBufferToWav(props.audioBuffer);\n\n      // Capture current instrument settings\n      const settings = captureInstrumentState();\n\n      const sample: SavedSample = {\n        name,\n        audioData: wavData,\n        sampleRate: props.audioBuffer.sampleRate,\n        channels: props.audioBuffer.numberOfChannels,\n        createdAt: new Date(),\n        settings, // Include the instrument settings\n      };\n\n      await db.samples.add(sample);\n      console.log('Sample saved successfully!');\n    } catch (error) {\n      console.error('Save failed:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <save-button\n      class={`${props.class ? props.class : ''} save-button ${props.isOpen ? 'open' : ''}`}\n      disabled={props.disabled || saving()}\n      onclick={handleSave}\n      title='Save sample'\n    ></save-button>\n  );\n};\n\nexport default SaveButton;\n","// components/Sidebar.tsx\nimport {\n  Component,\n  createSignal,\n  createEffect,\n  For,\n  onCleanup,\n} from 'solid-js';\nimport { db, SavedSample } from '../db/samplelib/sampleIdb';\n\ninterface SidebarProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSampleSelect: (sample: SavedSample) => void;\n}\n\nconst Sidebar: Component<SidebarProps> = (props) => {\n  const [samples, setSamples] = createSignal<SavedSample[]>([]);\n  const [loading, setLoading] = createSignal(false);\n\n  const loadSamples = async () => {\n    setLoading(true);\n    try {\n      const allSamples = await db.samples\n        .orderBy('createdAt')\n        .reverse()\n        .toArray();\n      setSamples(allSamples);\n    } catch (error) {\n      console.error('Failed to load samples:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (sample: SavedSample, event: Event) => {\n    event.stopPropagation(); // Prevent triggering sample selection\n\n    // if (!confirm(`Delete \"${sample.name}\"?`)) {\n    //   return;\n    // }\n\n    try {\n      await db.samples.delete(sample.id!);\n      console.log('Sample deleted:', sample.name);\n      // Reload samples to update the list\n      loadSamples();\n    } catch (error) {\n      console.error('Failed to delete sample:', error);\n    }\n  };\n\n  createEffect(() => {\n    if (props.isOpen) {\n      loadSamples();\n    }\n  });\n\n  // Handle Escape key to close sidebar\n  createEffect(() => {\n    const handleEscapeKey = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && props.isOpen) {\n        props.onClose();\n      }\n    };\n\n    if (props.isOpen) {\n      document.addEventListener('keydown', handleEscapeKey);\n      onCleanup(() => {\n        document.removeEventListener('keydown', handleEscapeKey);\n      });\n    }\n  });\n\n  // Reload when sidebar opens\n  const isOpen = () => props.isOpen;\n\n  return (\n    <div class={`sidebar ${isOpen() ? 'sidebar-open' : 'sidebar-closed'}`}>\n      <div class='sidebar-header'>\n        <h3>Saved Samples</h3>\n        <button class='close-button' onclick={props.onClose}>\n          ×\n        </button>\n      </div>\n\n      <div class='sidebar-content'>\n        {loading() ? (\n          <div>Loading...</div>\n        ) : (\n          <For each={samples()}>\n            {(sample) => (\n              <div\n                class='sample-item'\n                onclick={() => props.onSampleSelect(sample)}\n              >\n                <div class='sample-info'>\n                  <div class='sample-name'>{sample.name}</div>\n                  <div class='sample-date'>\n                    {sample.createdAt?.toLocaleDateString()}\n                  </div>\n                </div>\n                <button\n                  class='delete-button'\n                  onclick={(e) => handleDelete(sample, e)}\n                  title={`Delete ${sample.name}`}\n                >\n                  <svg\n                    width='16'\n                    height='16'\n                    viewBox='0 0 24 24'\n                    fill='currentColor'\n                  >\n                    <path d='M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z' />\n                  </svg>\n                </button>\n              </div>\n            )}\n          </For>\n        )}\n\n        {samples().length === 0 && !loading() && (\n          <div class='no-samples'>No saved samples</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","// components/SidebarToggle.tsx\nimport { Component } from 'solid-js';\n\ninterface SidebarToggleProps {\n  onclick: () => void;\n  isOpen?: boolean;\n  class?: string;\n}\n\nconst SidebarToggle: Component<SidebarToggleProps> = (props) => {\n  return (\n    <button\n      class={`${props.class ? props.class : ''} sidebar-toggle ${props.isOpen ? 'open' : ''}`}\n      onclick={props.onclick}\n      title='View saved samples'\n    >\n      <svg width='20' height='20' viewBox='0 0 24 24' fill='currentColor'>\n        <path d='M3 6h18v2H3V6m0 5h18v2H3v-2m0 5h18v2H3v-2Z' />\n      </svg>\n    </button>\n  );\n};\n\nexport default SidebarToggle;\n","import { Component, onMount, createSignal } from 'solid-js';\nimport type { SamplerElement, SamplePlayer } from '@repo/audio-components';\nimport { addExpandCollapseListeners } from './utils/expandCollapse';\nimport SaveButton from './components/SaveButton';\nimport { SavedSample } from './db/samplelib/sampleIdb';\nimport Sidebar from './components/Sidebar';\nimport SidebarToggle from './components/SidebarToggle';\nimport { restoreInstrumentState } from './utils/instrumentState';\n\nimport ModalTest from './components/ModalTest';\n\nconst App: Component = () => {\n  const [layout, setLayout] = createSignal<'desktop' | 'tablet' | 'mobile'>(\n    'desktop'\n  );\n\n  let samplerElementRef: SamplerElement | undefined;\n  let samplePlayerRef: SamplePlayer | null = null;\n\n  const [currentAudioBuffer, setCurrentAudioBuffer] =\n    createSignal<AudioBuffer | null>(null);\n  const [sampleLoaded, setSampleLoaded] = createSignal(false);\n  const [sidebarOpen, setSidebarOpen] = createSignal(false);\n\n  const handleSampleSelect = async (sample: SavedSample) => {\n    try {\n      if (!samplePlayerRef) return;\n\n      const arrayBuffer = sample.audioData;\n\n      await samplePlayerRef.loadSample(arrayBuffer, undefined, {\n        skipPreProcessing: true,\n      });\n\n      // Restore instrument settings if they exist\n      if (sample.settings) {\n        // Delay to ensure audio is loaded and UI is ready\n        setTimeout(() => {\n          restoreInstrumentState(sample.settings);\n        }, 500);\n      }\n\n      // Todo: possibly use event listener instead of timeout\n      // const restoreState = () => {\n      //   restoreInstrumentState(sample.settings!);\n      //   document.removeEventListener('sampler-initialized', restoreState);\n      // };\n      // document.addEventListener('sampler-initialized', restoreState, {\n      //   once: true,\n      // });\n      // }\n\n      setSidebarOpen(false);\n    } catch (error) {\n      console.error('Failed to load sample:', error);\n    }\n  };\n\n  onMount(() => {\n    const handleSampleLoaded = () => {\n      if (samplerElementRef) {\n        samplePlayerRef = samplerElementRef.getSamplePlayer();\n        const audiobuffer = samplePlayerRef?.audiobuffer || null;\n\n        setCurrentAudioBuffer(audiobuffer);\n        setSampleLoaded(true);\n      }\n    };\n\n    // Simple responsive layout detection\n    const updateLayout = () => {\n      const width = window.innerWidth;\n\n      if (width < 800) {\n        setLayout('mobile');\n      } else if (width < 1200) {\n        setLayout('tablet');\n      } else {\n        setLayout('desktop');\n      }\n    };\n\n    document.addEventListener('sample-loaded', handleSampleLoaded);\n    window.addEventListener('resize', updateLayout);\n\n    updateLayout(); // Initial check\n\n    // Add expand/collapse listeners\n    addExpandCollapseListeners();\n\n    return () => {\n      document.removeEventListener('sample-loaded', handleSampleLoaded);\n      window.removeEventListener('resize', updateLayout);\n    };\n  });\n\n  return (\n    <div id='page-wrapper' class='page-wrapper'>\n      <div class='pre-sidebar-buttons'>\n        <SidebarToggle\n          onclick={() => setSidebarOpen(!sidebarOpen())}\n          isOpen={sidebarOpen()}\n          class='left-side-button bg-dark-gray'\n        />\n\n        <SaveButton\n          audioBuffer={currentAudioBuffer()}\n          disabled={!sampleLoaded()}\n          isOpen={sidebarOpen()}\n          class='left-side-button bg-dark-gray'\n        />\n\n        <tempo-knob\n          target-node-id='test-sampler'\n          label=' '\n          class={`left-side-button ${sidebarOpen() ? 'open' : ''}`}\n        />\n\n        {/* <ModalTest /> */}\n      </div>\n\n      <Sidebar\n        isOpen={sidebarOpen()}\n        onClose={() => setSidebarOpen(false)}\n        onSampleSelect={handleSampleSelect}\n      />\n\n      <div class={`control-grid layout-${layout()}`} id='sampler-container'>\n        {/* Sampler Audio Engine */}\n        <sampler-element\n          ref={samplerElementRef}\n          node-id='test-sampler'\n          debug-mode='false'\n        />\n\n        {/* Controls */}\n        <fieldset class='control-group env-group'>\n          <legend class='expandable-legend'>Envelopes</legend>\n          <div class='expandable-content'>\n            <envelope-switcher height='225px' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group sample-group'>\n          <legend class='expandable-legend'>Sample</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <record-button\n                target-node-id='test-sampler'\n                show-status='false'\n              />\n              <input-select target-node-id='test-sampler' />\n            </div>\n            <load-button target-node-id='test-sampler' show-status='false' />\n\n            <button\n              class='reset-button'\n              title='Reset knobs'\n              disabled={!sampleLoaded()}\n              onclick={() => {\n                const knobElements = document.querySelectorAll('knob-element');\n                knobElements.forEach((knob) => {\n                  (knob as any).resetToDefault();\n                });\n              }}\n            >\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 256 256'\n                fill='none'\n              >\n                <path d='M139.141 232.184c78.736 0 127.946-85.236 88.579-153.424-39.369-68.187-137.789-68.187-177.158 0A102.125 102.125 0 0 0 43.71 93.1m62.258-5.371c-14.966 5.594-35.547 10.026-48.737 19.272-2.137 1.497-26.015 16.195-26.049 13.991C27.503 98.21 13.21 75.873 13.21 52.583' />\n              </svg>\n            </button>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group mix-group'>\n          <legend class='expandable-legend'>Mix</legend>\n          <div class='expandable-content'>\n            <volume-knob target-node-id='test-sampler' />\n            <dry-wet-knob target-node-id='test-sampler' />\n            <reverb-send-knob label='RevSend' target-node-id='test-sampler' />\n            <reverb-size-knob label='RevSize' target-node-id='test-sampler' />\n            <delay-send-knob label='Delay' target-node-id='test-sampler' />\n            <delay-time-knob label='Time' target-node-id='test-sampler' />\n            <delay-feedback-knob label='FB' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group filter-group'>\n          <legend class='expandable-legend'>Filters</legend>\n          <div class='expandable-content'>\n            <highpass-filter-knob target-node-id='test-sampler' />\n            <lowpass-filter-knob target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group misc-group'>\n          <legend class='expandable-legend'>Misc</legend>\n          <div class='expandable-content'>\n            <distortion-knob target-node-id='test-sampler' />\n            <am-modulation label='AM' target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group loop-group'>\n          <legend class='expandable-legend'>Loop</legend>\n          <div class='expandable-content'>\n            <loop-start-knob target-node-id='test-sampler' label='Start' />\n            <loop-duration-knob\n              target-node-id='test-sampler'\n              label='Duration'\n            />\n            <div class='flex-col'>\n              <loop-duration-drift-knob\n                target-node-id='test-sampler'\n                label='Drift'\n              />\n              <pan-drift-toggle target-node-id='test-sampler' />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group trim-group'>\n          <legend class='expandable-legend'>Trim</legend>\n          <div class='expandable-content'>\n            <trim-start-knob target-node-id='test-sampler' />\n            <trim-end-knob target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group feedback-group'>\n          <legend class='expandable-legend'>Feedback</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <feedback-knob target-node-id='test-sampler' label='Amount' />\n              <feedback-mode-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <div class='flex-row'>\n              <div class='flex-col'>\n                <feedback-pitch-knob\n                  target-node-id='test-sampler'\n                  label='Pitch'\n                />\n                <feedback-lpf-knob\n                  label='Lowpass'\n                  class='fb-lpf-knob'\n                  target-node-id='test-sampler'\n                />\n              </div>\n              <feedback-decay-knob\n                target-node-id='test-sampler'\n                label='Decay'\n              />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group lfo-group'>\n          <legend class='expandable-legend'>LFO's</legend>\n          <div class='expandable-content'>\n            <div class='flex-col'>\n              <gain-lfo-rate-knob target-node-id='test-sampler' label='Rate' />\n              <gain-lfo-sync-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <gain-lfo-depth-knob target-node-id='test-sampler' label='Depth' />\n            <div class='flex-col'>\n              <pitch-lfo-rate-knob target-node-id='test-sampler' label='Rate' />\n              <pitch-lfo-sync-toggle target-node-id='test-sampler' label='' />\n            </div>\n            <pitch-lfo-depth-knob target-node-id='test-sampler' label='Depth' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group toggle-group'>\n          <legend class='expandable-legend'>Toggles</legend>\n          <div class='expandable-content'>\n            <midi-toggle target-node-id='test-sampler' />\n            <playback-direction-toggle target-node-id='test-sampler' />\n            <loop-lock-toggle target-node-id='test-sampler' />\n            <hold-lock-toggle target-node-id='test-sampler' />\n            <pitch-toggle target-node-id='test-sampler' />\n            <sampler-status target-node-id='test-sampler' />\n          </div>\n        </fieldset>\n\n        <fieldset class='control-group keyboard-group'>\n          <legend class='expandable-legend'>Keyboard</legend>\n          <computer-keyboard target-node-id='test-sampler' />\n          <div class='expandable-content'>\n            <piano-keyboard\n              id='piano-keyboard'\n              class='piano-keyboard'\n              target-node-id='test-sampler'\n              width='700'\n              height='80'\n            />\n            <div class='keyboard-controls'>\n              <div class='flex-row'>\n                <rootnote-select\n                  show-label='false'\n                  target-node-id='test-sampler'\n                />\n                <keymap-select\n                  show-label='false'\n                  target-node-id='test-sampler'\n                />\n              </div>\n\n              <glide-knob target-node-id='test-sampler' />\n            </div>\n          </div>\n        </fieldset>\n\n        {/* Row collapse icons */}\n        <div class='row-collapse-icon' data-row='1' style='grid-area: mix' />\n        <div\n          class='row-collapse-icon'\n          data-row='2'\n          style='grid-area: feedback'\n        />\n        <div class='row-collapse-icon' data-row='3' style='grid-area: lfo' />\n        <div\n          class='row-collapse-icon'\n          data-row='4'\n          style='grid-area: keyboard'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/* @refresh reload */\nimport { render } from 'solid-js/web';\nimport { defineSampler } from '@repo/audio-components';\nimport App from './App';\nimport './style.css';\n\ndefineSampler(); // Define all web components for the sampler\n\nconst root = document.getElementById('root');\n\nif (import.meta.env.DEV && !(root instanceof HTMLElement)) {\n  throw new Error(\n    'Root element not found. Did you forget to add it to your index.html? Or maybe the id attribute got misspelled?'\n  );\n}\n\nrender(() => <App />, root!);\n"],"names":["qsa","classOrId","container","toggleRow","rowNumber","selector","groups","allCollapsed","g","group","addExpandCollapseListeners","e","target","legend","_a","rowIcon","rowAttr","row","SampleDatabase","Dexie","db","captureInstrumentState","state","tagName","wrapper","knobElement","element","tempoKnob","states","button","currentState","toggle","isActive","selectElement","value","amModulation","waveformSelect","samplerElement","sampler","envType","envelope","p","error","restoreInstrumentState","settings","envData","currentPoints","i","lastIdx","lastPoint","point","audioBufferToWav","buffer","length","numberOfChannels","sampleRate","arrayBuffer","ArrayBuffer","view","DataView","writeString","offset","string","setUint8","charCodeAt","setUint32","setUint16","channel","sample","Math","max","min","getChannelData","setInt16","SaveButton","props","saving","setSaving","createSignal","handleSave","audioBuffer","name","prompt","Date","now","wavData","audioData","channels","createdAt","samples","add","console","log","_el$","_tmpl$","$$click","_$owner","_$getOwner","_$effect","_p$","_v$","class","isOpen","_v$2","disabled","_$className","t","undefined","_$delegateEvents","Sidebar","setSamples","loading","setLoading","loadSamples","allSamples","orderBy","reverse","toArray","handleDelete","event","stopPropagation","delete","id","createEffect","handleEscapeKey","key","onClose","document","addEventListener","onCleanup","removeEventListener","_el$2","firstChild","_el$3","_el$4","nextSibling","_el$5","_$addEventListener","_$insert","_c$","_$memo","_tmpl$2","_$createComponent","For","each","children","_el$7","_tmpl$3","_el$8","_el$9","_el$0","_el$1","onSampleSelect","toLocaleDateString","_$setAttribute","_c$2","_tmpl$4","SidebarToggle","onclick","App","layout","setLayout","samplerElementRef","samplePlayerRef","currentAudioBuffer","setCurrentAudioBuffer","sampleLoaded","setSampleLoaded","sidebarOpen","setSidebarOpen","handleSampleSelect","loadSample","skipPreProcessing","setTimeout","onMount","handleSampleLoaded","getSamplePlayer","audiobuffer","updateLayout","width","window","innerWidth","_el$6","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","_el$17","_el$18","_el$19","_el$20","_el$21","_el$22","_el$23","_el$24","_el$25","_el$26","_el$27","_el$28","_el$29","_el$30","_el$31","_el$32","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","_el$39","_el$40","_el$41","_el$42","_el$43","_el$44","_el$45","_el$46","_el$47","_el$48","_el$49","_el$50","_el$51","_el$52","_el$53","_el$54","_el$55","_el$56","_el$57","_el$58","_el$59","_el$60","_el$61","_el$62","_el$63","_el$64","_el$65","_el$66","_el$67","_el$68","_el$69","_el$70","_el$71","_el$72","_el$73","_el$74","_el$75","_el$76","_el$77","_el$78","_el$79","_el$80","_el$81","_el$82","_el$83","_el$84","_el$85","_el$86","_el$87","_el$88","_el$89","_ref$","_$use","querySelectorAll","forEach","knob","resetToDefault","_v$3","a","defineSampler","root","getElementById","render"],"mappings":"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"}