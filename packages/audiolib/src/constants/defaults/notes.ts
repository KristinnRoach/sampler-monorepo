// audiolib's predefined scale patterns
export const scales = {
  chromatic: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],

  major: [0, 2, 4, 5, 7, 9, 11],
  minor: [0, 2, 3, 5, 7, 8, 10],

  harmonic_minor: [0, 2, 3, 5, 7, 8, 11],
  melodic_minor: [0, 2, 3, 5, 7, 9, 11],

  lydian: [0, 2, 4, 6, 7, 9, 10],
  dorian: [0, 2, 3, 5, 7, 9, 10],
  phrygian: [0, 1, 3, 5, 7, 8, 10],
  mixolydian: [0, 2, 4, 5, 7, 9, 10],

  locrian: [0, 1, 3, 5, 6, 8, 10],
  diminished: [0, 2, 3, 5, 6, 8, 9, 11],
  augmented: [0, 3, 4, 8, 9],

  major_pentatonic: [0, 2, 4, 7, 9],
  minor_pentatonic: [0, 2, 3, 7, 8],
  blues: [0, 3, 5, 6, 7, 10],

  whole_tone: [0, 2, 4, 6, 8, 10],
  // ... add more as needed
} as const;

export const pianoNoteFreq = [
  16.35,
  17.32,
  18.35,
  19.45,
  20.6,
  21.83,
  23.12,
  24.5,
  25.96,
  27.5,
  29.14,
  30.87, // A0-G#1
  32.7,
  34.65,
  36.71,
  38.89,
  41.2,
  43.65,
  46.25,
  49.0,
  51.91,
  55.0,
  58.27,
  61.74, // A1-G#2
  65.41,
  69.3,
  73.42,
  77.78,
  82.41,
  87.31,
  92.5,
  98.0,
  103.83,
  110.0,
  116.54,
  123.47, // A2-G#3
  130.81,
  138.59,
  146.83,
  155.56,
  164.81,
  174.61,
  185.0,
  196.0,
  207.65,
  220.0,
  233.08,
  246.94, // A3-G#4
  261.63,
  277.18,
  293.66,
  311.13,
  329.63,
  349.23,
  369.99,
  392.0,
  415.3,
  440.0,
  466.16,
  493.88, // A4-G#5
  523.25,
  554.37,
  587.33,
  622.25,
  659.26,
  698.46,
  739.99,
  783.99,
  830.61,
  880.0,
  932.33,
  987.77, // A5-G#6
  1046.5,
  1108.73,
  1174.66,
  1244.51,
  1318.51,
  1396.91,
  1479.98,
  1567.98,
  1661.22,
  1760.0,
  1864.66,
  1975.53, // A6-G#7
  2093.0,
  2217.46,
  2349.32,
  2489.02,
  2637.02,
  2793.83,
  2959.96,
  3135.96,
  3322.44,
  3520.0,
  3729.31,
  3951.07, // A7-C8
  4186.01, // C8
] as const;

// Root note mapping (C-indexed)
export const rootNoteIdx = {
  C: 0,
  'C#': 1,
  Db: 1,
  D: 2,
  'D#': 3,
  Eb: 3,
  E: 4,
  F: 5,
  'F#': 6,
  Gb: 6,
  G: 7,
  'G#': 8,
  Ab: 8,
  A: 9,
  'A#': 10,
  Bb: 10,
  B: 11,
} as const;

// Todo: henda fyrir neðan ef óþarfi

export const noteNameToFreq = {
  A0: 27.5,
  'A#0': 29.14,
  Bb0: 29.14,
  B0: 30.87,
  C1: 32.7,
  'C#1': 34.65,
  Db1: 34.65,
  D1: 36.71,
  'D#1': 38.89,
  Eb1: 38.89,
  E1: 41.2,
  F1: 43.65,
  'F#1': 46.25,
  Gb1: 46.25,
  G1: 49.0,
  'G#1': 51.91,
  Ab1: 51.91,
  A1: 55.0,
  'A#1': 58.27,
  Bb1: 58.27,
  B1: 61.74,
  C2: 65.41,
  'C#2': 69.3,
  Db2: 69.3,
  D2: 73.42,
  'D#2': 77.78,
  Eb2: 77.78,
  E2: 82.41,
  F2: 87.31,
  'F#2': 92.5,
  Gb2: 92.5,
  G2: 98.0,
  'G#2': 103.83,
  Ab2: 103.83,
  A2: 110.0,
  'A#2': 116.54,
  Bb2: 116.54,
  B2: 123.47,
  C3: 130.81,
  'C#3': 138.59,
  Db3: 138.59,
  D3: 146.83,
  'D#3': 155.56,
  Eb3: 155.56,
  E3: 164.81,
  F3: 174.61,
  'F#3': 185.0,
  Gb3: 185.0,
  G3: 196.0,
  'G#3': 207.65,
  Ab3: 207.65,
  A3: 220.0,
  'A#3': 233.08,
  Bb3: 233.08,
  B3: 246.94,
  C4: 261.63,
  'C#4': 277.18,
  Db4: 277.18,
  D4: 293.66,
  'D#4': 311.13,
  Eb4: 311.13,
  E4: 329.63,
  F4: 349.23,
  'F#4': 369.99,
  Gb4: 369.99,
  G4: 392.0,
  'G#4': 415.3,
  Ab4: 415.3,
  A4: 440.0,
  'A#4': 466.16,
  Bb4: 466.16,
  B4: 493.88,
  C5: 523.25,
  'C#5': 554.37,
  Db5: 554.37,
  D5: 587.33,
  'D#5': 622.25,
  Eb5: 622.25,
  E5: 659.26,
  F5: 698.46,
  'F#5': 739.99,
  Gb5: 739.99,
  G5: 783.99,
  'G#5': 830.61,
  Ab5: 830.61,
  A5: 880.0,
  'A#5': 932.33,
  Bb5: 932.33,
  B5: 987.77,
  C6: 1046.5,
  'C#6': 1108.73,
  Db6: 1108.73,
  D6: 1174.66,
  'D#6': 1244.51,
  Eb6: 1244.51,
  E6: 1318.51,
  F6: 1396.91,
  'F#6': 1479.98,
  Gb6: 1479.98,
  G6: 1567.98,
  'G#6': 1661.22,
  Ab6: 1661.22,
  A6: 1760.0,
  'A#6': 1864.66,
  Bb6: 1864.66,
  B6: 1975.53,
  C7: 2093.0,
  'C#7': 2217.46,
  Db7: 2217.46,
  D7: 2349.32,
  'D#7': 2489.02,
  Eb7: 2489.02,
  E7: 2637.02,
  F7: 2793.83,
  'F#7': 2959.96,
  Gb7: 2959.96,
  G7: 3135.96,
  'G#7': 3322.44,
  Ab7: 3322.44,
  A7: 3520.0,
  'A#7': 3729.31,
  Bb7: 3729.31,
  B7: 3951.07,
  C8: 4186.01,
} as const;

export const noteNamesToPeriod = Object.fromEntries(
  Object.entries(noteNameToFreq).map(([note, freq]) => [note, 1 / freq])
) as { [K in keyof typeof noteNameToFreq]: number };

// Add this utility function
export function getNoteName(absoluteIndex: number): string {
  const octave = Math.floor(absoluteIndex / 12);
  const noteIndex = absoluteIndex % 12;

  // Get the first matching note name (preferring naturals/sharps over flats)
  const noteName =
    Object.entries(rootNoteIdx).find(
      ([_, idx]) => idx === noteIndex && !_.includes('b')
    )?.[0] || '';

  return `${noteName}${octave}`;
}

// Export a pre-computed array for even faster lookup
export const noteIndexToName = Array.from(
  { length: pianoNoteFreq.length },
  (_, i) => getNoteName(i)
);

export const allNotePeriodsInSec = pianoNoteFreq.map((freq) => 1 / freq);
